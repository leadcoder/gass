vcpkg_fail_port_install(ON_TARGET "UWP")

vcpkg_from_github(
    OUT_SOURCE_PATH SOURCE_PATH
    REPO leadcoder/gass
    REF 5bff51f067b0116d7de2d2542c48b2d3cb756473
    SHA512 09d016d88650d306abb5367f634bf4ff6d4f0867296bee1d3bd7d8a2083a87e0d33347000fcbb3ff55f5ad03b72d78e1152ea91a660eeca31b4b72ec3c427d2e
    HEAD_REF vcpkg
)

if (VCPKG_LIBRARY_LINKAGE STREQUAL "static")
    set(GASS_BUILDTYPE_STATIC TRUE)
else()
    set(GASS_BUILDTYPE_STATIC FALSE)
endif()

if ("sim" IN_LIST FEATURES)
	set(GASS_BUILD_SIM TRUE)
else()
	set(GASS_BUILD_SIM FALSE)
endif()

if ("force-static" IN_LIST FEATURES)
	set(GASS_BUILDTYPE_STATIC TRUE)
	vcpkg_check_linkage(ONLY_STATIC_LIBRARY)
endif()

if(VCPKG_CMAKE_SYSTEM_NAME STREQUAL "Linux")
	set(GASS_BUILD_PLUGIN_PHYSX FALSE)
	set(GASS_BUILD_PLUGIN_OSG FALSE)
	set(GASS_BUILD_PLUGIN_OSGEARTH FALSE)
else()
	set(GASS_BUILD_PLUGIN_PHYSX TRUE)
	set(GASS_BUILD_PLUGIN_OSG TRUE)
	set(GASS_BUILD_PLUGIN_OSGEARTH TRUE)
endif()

vcpkg_configure_cmake(
    SOURCE_PATH ${SOURCE_PATH}
    PREFER_NINJA
    OPTIONS
        -DGASS_BUILDTYPE_STATIC=${GASS_BUILDTYPE_STATIC}
        -DGASS_BUILD_SIM_SAMPLES=FALSE
		-DGASS_BUILD_CORE_SAMPLES=FALSE
		-DGASS_BUILD_SIM=${GASS_BUILD_SIM}
		-DGASS_BUILD_PLUGIN_MYGUI=FALSE  
		-DGASS_BUILD_PLUGIN_OGRE=FALSE
		-DGASS_BUILD_PLUGIN_OPENAL=TRUE
		-DGASS_BUILD_PLUGIN_RAKNET=TRUE
		-DGASS_BUILD_PLUGIN_PHYSX=${GASS_BUILD_PLUGIN_PHYSX}
		-DGASS_BUILD_PLUGIN_ODE=TRUE
		-DGASS_BUILD_PLUGIN_OSG=${GASS_BUILD_PLUGIN_OSG}
		-DGASS_BUILD_PLUGIN_OSGEARTH=${GASS_BUILD_PLUGIN_OSGEARTH}
		-DGASS_BUILD_PLUGIN_OIS=TRUE
		-DGASS_INSTALL_DEP_BINARIES=FALSE
		-DGASS_INSTALL_INCLUDE_DIR:STRING=include/gass
)

vcpkg_install_cmake()

vcpkg_copy_pdbs()

vcpkg_fixup_cmake_targets(CONFIG_PATH "CMake")

file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/debug/include ${CURRENT_PACKAGES_DIR}/debug/share)

set(GASS_TOOL_PATH_REL ${CURRENT_PACKAGES_DIR}/tools/gass)
set(GASS_TOOL_PATH_DBG ${CURRENT_PACKAGES_DIR}/debug/tools/gass)

file(GLOB GASS_TOOLS ${CURRENT_PACKAGES_DIR}/bin/*.exe)
if(GASS_TOOLS)
	file(COPY ${GASS_TOOLS} DESTINATION ${GASS_TOOL_PATH_REL})
	file(REMOVE_RECURSE ${GASS_TOOLS})
endif()

file(GLOB GASS_TOOLS_DBG ${CURRENT_PACKAGES_DIR}/debug/bin/*.exe)

if(GASS_TOOLS_DBG)
	file(REMOVE_RECURSE ${GASS_TOOLS_DBG})
endif()

#move plugins to tools
file(GLOB GASS_PLUGINS_DBG ${CURRENT_PACKAGES_DIR}/debug/bin/GASSPlugin*.dll)
if(GASS_PLUGINS_DBG)
	file(COPY ${GASS_PLUGINS_DBG} DESTINATION ${GASS_TOOL_PATH_DBG}/plugins)
	file(REMOVE_RECURSE ${GASS_PLUGINS_DBG})
endif()

file(GLOB GASS_PLUGINS_REL ${CURRENT_PACKAGES_DIR}/bin/GASSPlugin*.dll)
if(GASS_PLUGINS_REL)
	file(COPY ${GASS_PLUGINS_REL} DESTINATION ${GASS_TOOL_PATH_REL}/plugins)
	file(REMOVE_RECURSE ${GASS_PLUGINS_REL})
endif()

#move cmake-files to share
file(GLOB GASS_CMAKE_FILES ${CURRENT_PACKAGES_DIR}/CMake/*.cmake)
file(COPY ${GASS_CMAKE_FILES} DESTINATION ${CURRENT_PACKAGES_DIR}/share/gass/CMake)
file(REMOVE_RECURSE ${CURRENT_PACKAGES_DIR}/CMake ${CURRENT_PACKAGES_DIR}/debug/CMake)

#install copyright
file(INSTALL ${SOURCE_PATH}/LGPL DESTINATION ${CURRENT_PACKAGES_DIR}/share/${PORT} RENAME copyright)

